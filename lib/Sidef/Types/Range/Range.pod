
=encoding utf8

=head1 NAME

Sidef::Types::Range::Range

=head1 DESCRIPTION

This class implements ...

=head1 SYNOPSIS

var obj = Range(...)

=head1 METHODS

=head2 *

    a * b

Returns the

Aliases: I<mul>

=cut

=head2 +

    a + b

Returns the

Aliases: I<add>

=cut

=head2 -

    a - b

Returns the

Aliases: I<sub>

=cut

=head2 ...

    a ... b

Returns the

Aliases: I<to_list>

=cut

=head2 /

    a / b

Returns the

Aliases: I<÷>, I<div>

=cut

=head2 ==

    a == b

Returns the

Aliases: I<eq>

=cut

=head2 ≠

    a ≠ b

Returns the

Aliases: I<!=>, I<ne>

=cut

=head2 accumulate

    Range.accumulate()

Returns the

=cut

=head2 accumulate_by

    Range.accumulate_by()

Returns the

=cut

=head2 all

    Range.all()

Returns the

=cut

=head2 any

    Range.any()

Returns the

=cut

=head2 bounds

    Range.bounds()

Returns the

=cut

=head2 by

    Range.by()

Returns the

=cut

=head2 cons

    Range.cons()

Returns the

Aliases: I<map_cons>

=cut

=head2 contain

    Range.contain()

Returns the

Aliases: I<include>, I<contains>, I<includes>

=cut

=head2 count

    Range.count()

Returns the

=cut

=head2 count_by

    Range.count_by()

Returns the

=cut

=head2 cross_operator

    Range.cross_operator()

Returns the

=cut

=head2 each_cons

    Range.each_cons()

Returns the

=cut

=head2 each_slice

    Range.each_slice()

Returns the

=cut

=head2 first_by

    Range.first_by()

Returns the

=cut

=head2 flip

    Range.flip()

Returns the

Aliases: I<reverse>

=cut

=head2 for

    Range.for()

Returns the

Aliases: I<each>, I<foreach>

=cut

=head2 from

    Range.from()

Returns the

=cut

=head2 grep

    Range.grep()

Returns the

Aliases: I<select>

=cut

=head2 head

    Range.head()

Returns the

Aliases: I<first>

=cut

=head2 join

    Range.join()

Returns the

=cut

=head2 kv

    Range.kv()

Returns the

Aliases: I<pairs>, I<zip_indices>

=cut

=head2 last

    Range.last()

Returns the

Aliases: I<tail>

=cut

=head2 last_by

    Range.last_by()

Returns the

=cut

=head2 len

    Range.len()

Returns the

Aliases: I<length>

=cut

=head2 map

    Range.map()

Returns the

=cut

=head2 map_operator

    Range.map_operator()

Returns the

=cut

=head2 max

    Range.max()

Returns the

=cut

=head2 max_by

    Range.max_by()

Returns the

=cut

=head2 min

    Range.min()

Returns the

=cut

=head2 min_by

    Range.min_by()

Returns the

=cut

=head2 new

    Range.new()

Returns the

Aliases: I<call>

=cut

=head2 none

    Range.none()

Returns the

=cut

=head2 pam_operator

    Range.pam_operator()

Returns the

=cut

=head2 pick

    Range.pick()

Returns the

=cut

=head2 rand

    Range.rand()

Returns the

Aliases: I<sample>

=cut

=head2 reduce

    Range.reduce()

Returns the

=cut

=head2 reduce_operator

    Range.reduce_operator()

Returns the

=cut

=head2 shuffle

    Range.shuffle()

Returns the

=cut

=head2 slices

    Range.slices()

Returns the

Aliases: I<map_slice>

=cut

=head2 step

    Range.step()

Returns the

=cut

=head2 to

    Range.to()

Returns the

=cut

=head2 to_a

    Range.to_a()

Returns the

Aliases: I<to_array>

=cut

=head2 to_v

    Range.to_v()

Returns the

Aliases: I<to_vec>, I<to_vector>

=cut

=head2 unroll_operator

    Range.unroll_operator()

Returns the

=cut

=head2 while

    Range.while()

Returns the

=cut

=head2 zip_operator

    Range.zip_operator()

Returns the

=cut
