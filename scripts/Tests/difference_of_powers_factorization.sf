#!/usr/bin/ruby

define EXTRA = true

var t0 = Time.micro

var n1 = (45**120 + 35**420)
var n2 = abs(45**120 - 35**420)

var n3 = (43**480 + 1)
var n4 = (43**480 - 1)

var f1 = n1.dop_factor
var f2 = n2.dop_factor
var f3 = n3.dop_factor
var f4 = n4.dop_factor

assert_eq(f1.prod, n1)
assert_eq(f2.prod, n2)
assert_eq(f3.prod, n3)
assert_eq(f4.prod, n4)

assert(f1.all {|d| d `divides` n1 })
assert(f2.all {|d| d `divides` n2 })
assert(f3.all {|d| d `divides` n3 })
assert(f4.all {|d| d `divides` n4 })

assert_eq(f1, %n[10, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 41, 85, 89, 401, 14496938063297535233103701080316321, 1924378137140823961433210222707848958434382035474023944522964804680345101841, 225243672203977122688123183792053229780533830473295955702082043419502621410300378982513675859370313918642701599809589519542989668289986905668947241, 13713921429569823875786204458267288388079206511872648063066405028197111588765216953339638394874928588230656097864488442245113896568173698894738929766319978093013471394417343267192576916637610623147561687948661063244152947533800829442594907765001892967094587214308463157186258041227481422598106734096961])
assert_eq(f2, %n[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 11, 13, 31, 61, 151, 269, 313, 449, 541, 1237, 643392989, 1286785897, 17106398310481, 27418518623753, 941742071282767, 26410435399672218267623095693708961, 43867734579538298160082922884183671721, 43867735960221215598799390160530821721, 31547182576079050084395601762662184875338828850620179917021538251716722981, 62076712147528903654813667484621469944334740749526492609958011907963506511, 1924378197708251909567196753392432348594387107712726618137231240213821501841, 3703231214705591542528761517137978709723409276572987682889798350464149957717983021812837810319706589010422323508916108163492698766847770440250661589281])
assert_eq(f3, %n[2, 9331696012984573335011130262486416473893365537835201, 348322201915008729090636772576515803886060477631572903144165796816565104164140501223596052437540511830401, 121328356346920110739367632542839168601768464042963452115547638863283435870692772654199397753789111449816503673901882090873227637447383988510509857319671154685674411730208431606563009615420817821246250487980801, 14720570053845229519044401907484653168785957089226709459932049694275507476392070906810151075176374252362343973992591514058387587305214516683567810579795995726716357706249819736308588775563056529302085612265121239524034771405980985373517522838546281796449412108735343845265865626618456621726699610219674197299028987984371250861058996034345517475307909732833760075825214420098745342158243804683679175649788776588251481601])
assert_eq(f4, %n[2, 2, 2, 2, 2, 2, 2, 3, 5, 11, 21, 631, 925, 1807, 1709401, 3341101, 3416953, 3500201, 2336376466301, 5844100138801, 11416525335601, 11688196858801, 11959868382001, 68307012864656046731157601, 136613985769692984396597601, 136614025729300405262037601, 136687911065033055131157601, 18663392025967549897928807125819569678097575975595201, 18663392025969146670022260388358807218474637613355201, 18663397485015176540596738963978403852358335288875201, 348322201915008729090636770026834685454073315657046543390159681496060656001867018360444604858108552790401, 348322201915038530274193023357020232613427986361702972985785509723821093355152625579938398803674829910401, 121328356346920110739367633430949709955120380868519912876787256953197151765990967700458082683885959457318878415618709601938097510447442079950280548026994063473566478490312836644313912238011967651767570188460801])

if (EXTRA) {
    var n5 = (3631221**165 + 1)
    var n6 = (3631221**165 - 1)

    var f5 = n5.dop_factor
    var f6 = n6.dop_factor

    assert_eq(f5.prod, n5)
    assert_eq(f6.prod, n6)

    assert(f5.all {|d| d `divides` n5 })
    assert(f6.all {|d| d `divides` n6 })

    assert_eq(f5, %n[2, 1815611, 13185762319621, 173864375829940824812120041, 30228846156838256210511440142326232848844943880264881, 398590270852897443568596047554155588765440420172058757268470726101, 158874335275467319099957265506522755242522210556559902604003435330714452293772939696741312780606752766529319735531554528571807098201, 25241047458103102815299367149600345172908463776968654615130975523110648827816140619812060045429054791478096601018535845777189486187528077970802971347348843791667082955712548886611255840387162495645480876783822416704627892986446707357862988247947789468307094284401, 637109950421967442294823573231151435635810061299555079529880925073921783052443639274556815305900355783246556448925240508817124942341953137891956635322678232409831754913961697712577028906814352989774074120478784155655116171380132063438736449133073726354086002592395613852968352321414349779635447072890290640294151551725012655505971091998821175900070441403081787478622077239468637949131640982210650707966994626491556999400702893720764196605473076193867467454265449124391226540355302454956926960489349552055706196511298496792801])
    assert_eq(f6, %n[2, 2, 907805, 65928847910315, 34772894318160253675399241, 30228829507431441184625567610590352749934026714946481, 398590490388078926870320299235985692232368210523742308283698263111, 158874247770855772102681871173682905843797694114348631884700426265846902904291869310219637553980359448396985502266522272943608666201, 25241033555869938275591899360868615510675659515205450795465840137865272119599438215088709620057067535625435984185150412832652443830661610143593973378209837689121652443422845601659719411688959626095770376704344216755869575501932955514241339247047862936010468268401, 637110301328797886012981257471303579813760342590573678789421208199325637648955034624948342394093709235693336992830252673794597363784505016912725994742371485810534538377042245707216117266621598824679177435650336083897351795225686335251475091874265030512446377906729790142681313702773088912291337168889062365153417707800001264210624346948596996108446325992827290443847059708346810383240934973291391981347799082367870188137696505457925185300745105766969262647207357295421190907163833585531354432668726951031475210303608665624801])
}

say "** Test passed -- took #{Time.micro - t0} seconds!"

__END__
** Test passed -- took 1.11933 seconds!
** Test passed -- took 0.58569 seconds!
** Test passed -- took 0.27638 seconds!
