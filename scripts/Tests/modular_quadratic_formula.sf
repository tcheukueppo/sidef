#!/usr/bin/ruby

# Solve modular quadratic equations
assert_eq(modular_quadratic_formula(3,4,5, 124), %n[47, 55, 109, 117])
assert_eq(modular_quadratic_formula(3/5,4,5,124), %n[19, 57, 81, 119])
assert_eq(modular_quadratic_formula(3/13, 112, 13, 124), %n[9, 43, 71, 105])
assert_eq(modular_quadratic_formula(3/13, 4, 13*5, 124), %n[33, 53, 95, 115])
assert_eq(modular_quadratic_formula(3/13, 4, 5, 124), %n[3, 21, 65, 83])
assert_eq(modular_quadratic_formula(3/13, 4/7, 5, 124), %n[5, 25, 67, 87])
assert_eq(modular_quadratic_formula(3/13, 4/7, 5/11, 125), %n[3, 60])
assert_eq(modular_quadratic_formula(1,1,1,1729), %n[562, 653, 809, 828, 900, 919, 1075, 1166])

assert_eq(modular_quadratic_formula(1,1,-1e10 + 8,1e10), %n[1810486343, 2632873031, 7367126968, 8189513656])
assert_eq(modular_quadratic_formula(4,6,10 - 1e10, 1e10), %n[905243171, 1316436515, 7367126967/2, 8189513655/2, 5905243171, 6316436515, 17367126967/2, 18189513655/2])
assert_eq(modular_quadratic_formula(1,1,-1e10 - 10, 1e10), %n[263226214, 1620648089, 8379351910, 9736773785])

assert_eq(
    150.of { modular_quadratic_formula(1,1,1, _) }.flat,     # OEIS: A343232
    %n[0, 1, 2, 4, 3, 9, 7, 11, 4, 16, 5, 25, 10, 26, 16, 22, 6, 36, 18, 30, 7, 49, 13, 47, 29, 37, 8, 64, 23, 55, 9, 16, 74, 81, 25, 67, 35, 61, 46, 56, 45, 63, 10, 100, 19, 107, 49, 79, 11, 30, 102, 121, 42, 96, 67, 79],
)

assert_eq(
    50.by { modular_quadratic_formula(1,1,1, _).len > 0 },     # OEIS: A034017
    %n[1, 3, 7, 13, 19, 21, 31, 37, 39, 43, 49, 57, 61, 67, 73, 79, 91, 93, 97, 103, 109, 111, 127, 129, 133, 139, 147, 151, 157, 163, 169, 181, 183, 193, 199, 201, 211, 217, 219, 223, 229, 237, 241, 247, 259, 271, 273, 277, 283, 291],
)

say "** Tests passed!"
