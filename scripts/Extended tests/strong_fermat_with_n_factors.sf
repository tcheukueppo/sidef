#!/usr/bin/ruby

# Smallest strong Fermat pseudoprime to base 2 with n prime factors.
# https://oeis.org/A180065

# Timings:
#   27 feb 2023: 4.164s (with MPU)
#   27 feb 2023: 5.717s (without MPU)

func a(n) {
    return nil if (n < 2)

    var x = pn_primorial(n)
    var y = 2*x

    loop {
        #say "Sieving range: #{[x,y]}"
        var arr = n.strong_fermat_psp(2, x,y)

        if (arr.len >= 1) {
            return arr[0]
        }

        x = y+1
        y = 2*x
    }
}

var arr = gather {
    for n in (2..11) {
        say "a(#{n}) = #{take(a(n))}"
    }
}

assert_eq(
    arr,
    %n[2047, 15841, 800605, 293609485, 10761055201, 5478598723585, 713808066913201, 90614118359482705, 5993318051893040401, 24325630440506854886701]
)
